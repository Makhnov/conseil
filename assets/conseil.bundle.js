/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./js/conseil.js":
/*!***********************!*\
  !*** ./js/conseil.js ***!
  \***********************/
/***/ (() => {

eval("console.log('conseil.js');\n//console.log(typeof resize);\n\nlet space = \" \";\nlet br = \"\\n\";\nlet obj;\nlet editActive = false; // Booléen qui permet de vérifier si l'utilisateur est en train d'éditer une description ou non. Fonction: edition()\nlet fullscreenActive = false; // Booléen qui permet de vérifier si le personnage est en plein écran ou non. Fonction:  fullscreenCharacter()\nlet resizePage = false; // cf ligne 12\n\nconst scene = document.getElementById(\"scene\");\nconst box = document.getElementById('salleDuConseil');\nconst body = document.getElementsByTagName('body')[0];\nfunction toClass(str) {\n  // Remplace une chaine de caractère par une chaine équivalente utilisable en tant que classe css\n  // Enlever les accents et convertir en minuscules\n  const cleanStr = str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase();\n  // Enlever les caractères non-alphanumériques et remplacer les espaces par des tirets\n  return cleanStr.replace(/[^a-z0-9]+/g, \"-\");\n}\nfunction getQueryParam(name) {\n  const urlParams = new URLSearchParams(window.location.search);\n  return urlParams.get(name);\n}\nif (document.getElementsByClassName('resize').length > 0) {\n  // On vérifie si on a load une page qui nécessite un resize (salle du conseil, etc.)\n  resizePage = true;\n}\nfunction getConseil() {\n  //Fonction qui récupère les données de la BDD au chargement de la page\n  if (resizePage) {\n    resizeConseil();\n    reqConseil(true);\n  } else {\n    reqConseil(false);\n  }\n}\nfunction resizeConseil() {\n  // Fonction qui permet de redimensionner un groupe de personnages en fonction de l'écran de l'utilisateur\n  console.log('resize');\n  let width = document.documentElement.clientWidth; // On récupère la largeur de l'écran de l'utilisateur\n  let height = document.documentElement.clientHeight; // On récupère la hauteur de l'écran de l'utilisateur\n  let ratio = width / height / (16 / 9); // Le ratio de notre image de fond (la salle du conseil) est de 16/9e\n\n  /*\r\n  console.log( // Affichage des trois données stockées ci-dessus\r\n  \t\"ratio :\" + space + Math.trunc(ratio * 100) / 100 + br +\r\n  \t\"Width :\" + space + width + br +\r\n  \t\"height :\" + space + height);\r\n  */\n\n  // On stocke les ratios hauteurs & largeur par rapport à la taille actuelle de l'écran de l'utilisateur minorés de 2,5% pour les marges\n  let widthRatio = width / 1600 * 0.975;\n  let heightRatio = height / 900 * 0.975;\n\n  /* On vérifie si l'écran est plus ou moins au bonnes dimensions (+/-20%) ou si il est beaucoup trop large ou beaucoup trop haut */\n  /* On utilisera le ratio le plus réducteur */\n  if (ratio > 1.2) {\n    widthRatio = heightRatio;\n  } else if (ratio < 0.8) {\n    heightRatio = widthRatio;\n  }\n\n  /* on place la box (#scene) au centre de l'écran puis on scale ses dimensions en fonctions des ratios précédemment calculés */\n  box.style.transform = \"translate(-50%, -50%) scale(\" + widthRatio + \", \" + heightRatio + \")\";\n}\nif (resizePage) {\n  // timer de 0.5s pour éviter les resize instantanés\n  console.log('resize');\n  window.onresize = function () {\n    let resizeTimer;\n    clearTimeout(resizeTimer);\n    resizeTimer = setTimeout(function () {\n      resizeConseil();\n    }, 500);\n  };\n}\nfunction reqConseil(bool) {\n  // Créer un objet XMLHttpRequest\n  const requete = new XMLHttpRequest();\n\n  // Définir la fonction de rappel à appeler lorsque la réponse est reçue\n  requete.onload = function () {\n    // Si la requête est réussie (code 200)\n    if (requete.status === 200) {\n      // Analyser les données JSON renvoyées\n      const data = JSON.parse(requete.responseText);\n      console.log(data);\n      console.log(data.length);\n      // Créer des tableaux associatifs pour les personnages et les positions\n      let salleDuConseil = document.getElementById(\"salleDuConseil\");\n      let personnages = {};\n      let positions = {};\n\n      // Parcourir les données renvoyées\n      for (let i = 0; i < data.length; i++) {\n        const row = data[i];\n\n        // Ajouter les données du personnage dans le tableau associatif\n        personnages[row.id] = {\n          nom: row.nom,\n          titre: row.titre,\n          role: row.role,\n          description: row.description,\n          position_id: row.position_id\n        };\n\n        // Ajouter les données de position dans le tableau associatif\n        let positionData = row.position;\n        if (positionData !== null) {\n          positions[positionData.id] = {\n            top: positionData.top,\n            left: positionData.left,\n            height: positionData.height,\n            width: positionData.width,\n            scaling: positionData.scaling,\n            zIndex: positionData.zIndex,\n            image: positionData.image\n          };\n        }\n      }\n      if (bool) {\n        // Créer le DOM dynamique en utilisant les données des tableaux associatifs\n        for (let id in personnages) {\n          let personnage = personnages[id];\n          //console.log(personnage);\n          let position = positions[personnage.position_id];\n          //console.log(position);\n\n          let div = document.createElement('div');\n          div.id = toClass(personnage.nom);\n          div.classList.add('personnage', toClass(personnage.nom));\n\n          // Appliquer les styles CSS à la div\n          div.style.top = position.top + '%';\n          div.style.left = position.left + '%';\n          div.style.height = 'calc(' + position.height * 80 + 'px)';\n          div.style.width = 'calc(' + position.width * 50 + 'px)';\n          div.style.backgroundImage = position.image;\n          div.style.zIndex = position.zIndex;\n\n          // Appliquer les styles CSS au survol de la souris\n          div.addEventListener(\"mouseover\", function () {\n            const imgHover = position.image.replace(\"Min.png\", \"2.png\");\n            div.style.backgroundImage = imgHover;\n            div.style.transform = \"scale(\" + position.scaling + \")\";\n            //console.log(div.style.transform);\n            div.style.filter = \"brightness(1.2)\";\n          });\n\n          // Appliquer les styles CSS lorsque la souris quitte\n          div.addEventListener(\"mouseleave\", function () {\n            div.style.backgroundImage = position.image;\n            div.style.transform = \"scale(1)\";\n            div.style.filter = \"brightness(1)\";\n          });\n          let link = document.createElement('a');\n          link.href = \"perso.html?id=\" + id;\n\n          // Ajout du lien à la div\n          div.appendChild(link);\n          // Ajouter de la div dans la salle du conseil\n          salleDuConseil.appendChild(div);\n        }\n      } else {\n        const id = getQueryParam(\"id\");\n        console.log(id);\n        const personnage = personnages[id];\n        const position = positions[personnage.position_id];\n\n        // Récupérer les éléments HTML à modifier\n        const h1 = document.querySelector(\"#sceneProfil h1\");\n        const h2 = document.querySelector(\"#localiteFonctions h2\");\n        const h3 = document.querySelector(\"#localiteFonctions h3\");\n        const p = document.querySelector(\"#sceneProfil p\");\n        const imageConseil = document.querySelector(\"#imageConseil\");\n\n        // Remplir les éléments HTML avec les données du personnage\n        h1.textContent = personnage.nom;\n        console.log(personnage.nom);\n        h2.textContent = \"Titre : \" + personnage.titre;\n        h3.textContent = \"Rôle : \" + personnage.role;\n        p.textContent = personnage.description;\n        imageConseil.style.backgroundImage = position.image;\n      }\n    } else {\n      console.log('La requête a échoué: ' + requete.status);\n    }\n  };\n  // Configuration de la requête avec la méthode HTTP GET et l'URL du fichier PHP\n  requete.open('GET', './mvc/controller/controller.php', true);\n  // Envoie de la requête\n  requete.send();\n}\nfunction edition() {\n  // Fonction qui permet de modifier le style de la page lors de l'édition\n  const form = document.getElementsByTagName('form')[0];\n  const textArea = document.getElementById('inputText');\n  const edit = document.getElementById('edition');\n  const logo = document.getElementById('sceneProfil');\n  const val = document.getElementById('validation');\n  const nav1 = document.getElementsByTagName('nav')[0];\n  const nav2 = document.getElementsByTagName('nav')[1];\n  editActive = !editActive;\n  if (editActive) {\n    edit.textContent = \"Annuler\";\n    edit.style.backgroundColor = \"rgba(175, 0, 0, 0.25)\";\n    edit.style.visibility = \"visible\";\n    form.style.clipPath = \"inset(0 0 0 0)\";\n    logo.style.filter = \"grayscale(1.25) blur(1px)\";\n    val.style.opacity = \"1\";\n    nav1.style.transform = \"rotateX(180deg)\";\n    nav2.style.transform = \"rotateX(0deg)\";\n  } else {\n    edit.textContent = \"Editer\";\n    edit.style.backgroundColor = \"rgba(0, 128, 0, 0.25)\";\n    edit.style.visibility = \"hidden\";\n    logo.style.clipPath = \"inset(0 0 0 0)\";\n    form.style.clipPath = \"inset(50% 50% 50% 50%)\";\n    logo.style.filter = \"none\";\n    val.style.opacity = \"0\";\n    nav2.style.transform = \"rotateX(180deg)\";\n    nav1.style.transform = \"rotateX(0deg)\";\n  }\n}\nfunction validation() {\n  // Fonction qui permet de valider le formulaire (Methode GET) et lance index2.php\n  const val = document.getElementById('validationPhp');\n  const form = document.getElementsByTagName('textarea')[0];\n  let str = form.value;\n  str = str.replace(/'/g, '’'); // Les ' interfèrent avec les commandes php, on utilise les expressions régulières (regex) les remplacer par des ’\n  form.value = str;\n  val.click();\n}\nfunction fullscreenCharacter() {\n  // Fonction qui permet de lancer un zoom sur les personnages afin de les mettre en \"plein écran\"\n\n  const perso = document.getElementById('imageConseil');\n  const chateau = document.getElementById('bgConseil');\n  fullscreenActive = !fullscreenActive;\n  if (fullscreenActive) {\n    perso.style.height = \"100%\";\n    perso.style.width = \"100%\";\n    perso.style.setProperty('top', '0', 'important');\n    perso.style.setProperty('left', '0', 'important');\n    chateau.style.opacity = \"1\";\n    chateau.style.filter = \"brightness(1.5) contrast(.5) blur(2px)\";\n    chateau.style.backgroundSize = \"cover\";\n  } else {\n    perso.style.top = \"38%\";\n    perso.style.left = \"40%\";\n    perso.style.height = \"60%\";\n    perso.style.width = \"50%\";\n    chateau.style.opacity = \"1\";\n    chateau.style.filter = \"brightness(1)\";\n    chateau.style.backgroundSize = \"cover\";\n  }\n}\nresizeConseil();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./js/conseil.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./js/conseil.js"]();
/******/ 	
/******/ })()
;